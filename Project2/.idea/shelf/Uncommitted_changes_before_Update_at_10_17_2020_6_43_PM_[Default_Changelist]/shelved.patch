Index: streamer.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># do not import anything else from loss_socket besides LossyUDP\r\nfrom lossy_socket import LossyUDP\r\n# do not import anything else from socket except INADDR_ANY\r\nfrom socket import INADDR_ANY\r\n\r\n\r\nclass Streamer:\r\n    def __init__(self, dst_ip, dst_port,\r\n                 src_ip=INADDR_ANY, src_port=0):\r\n        \"\"\"Default values listen on all network interfaces, chooses a random source port,\r\n           and does not introduce any simulated packet loss.\"\"\"\r\n        self.socket = LossyUDP()\r\n        self.socket.bind((src_ip, src_port))\r\n        self.dst_ip = dst_ip\r\n        self.dst_port = dst_port\r\n\r\n    def send(self, data_bytes: bytes) -> None:\r\n        \"\"\"Note that data_bytes can be larger than one packet.\"\"\"\r\n        # Your code goes here!  The code below should be changed!\r\n\r\n        # for now I'm just sending the raw application-level data in one UDP payload\r\n        self.socket.sendto(data_bytes, (self.dst_ip, self.dst_port))\r\n\r\n    def recv(self) -> bytes:\r\n        \"\"\"Blocks (waits) if no data is ready to be read from the connection.\"\"\"\r\n        # your code goes here!  The code below should be changed!\r\n        \r\n        # this sample code just calls the recvfrom method on the LossySocket\r\n        data, addr = self.socket.recvfrom()\r\n        # For now, I'll just pass the full UDP payload to the app\r\n        return data\r\n\r\n    def close(self) -> None:\r\n        \"\"\"Cleans up. It should block (wait) until the Streamer is done with all\r\n           the necessary ACKs and retransmissions\"\"\"\r\n        # your code goes here, especially after you add ACKs and retransmissions.\r\n        pass\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- streamer.py	(revision 2c1b31cbb849014c5b9acce5b392501cc2acb5ad)
+++ streamer.py	(date 1602962812800)
@@ -2,6 +2,7 @@
 from lossy_socket import LossyUDP
 # do not import anything else from socket except INADDR_ANY
 from socket import INADDR_ANY
+import math
 
 
 class Streamer:
@@ -17,9 +18,20 @@
     def send(self, data_bytes: bytes) -> None:
         """Note that data_bytes can be larger than one packet."""
         # Your code goes here!  The code below should be changed!
+        '''chunk_size = 1472
+        all_data = len(data_bytes)
+        chunk_start = 0
+        chunk_end = chunk_size
+
+        while all_data > 0:
+            chunk_end = min(chunk_end, all_data)
+            self.socket.sendto(data_bytes[chunk_start:chunk_end], (self.dst_ip, self.dst_port))
+            chunk_start += chunk_size
+            chunk_end += chunk_size'''
+
 
         # for now I'm just sending the raw application-level data in one UDP payload
-        self.socket.sendto(data_bytes, (self.dst_ip, self.dst_port))
+
 
     def recv(self) -> bytes:
         """Blocks (waits) if no data is ready to be read from the connection."""
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"JavaScriptSettings\">\r\n    <option name=\"languageLevel\" value=\"ES6\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.7 (Project2)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 2c1b31cbb849014c5b9acce5b392501cc2acb5ad)
+++ .idea/misc.xml	(date 1602959515641)
@@ -3,5 +3,5 @@
   <component name="JavaScriptSettings">
     <option name="languageLevel" value="ES6" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (Project2)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Uninitialized environment" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
